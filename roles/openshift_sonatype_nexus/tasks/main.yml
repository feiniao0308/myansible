---
## Sonatype Nexus Install

# create project
- name: check if nexus project {{ project_name }} exists
  shell: "{{ openshift_cli }} get project {{ project_name }}"
  register: nexus_project_result
  ignore_errors: true
  changed_when: false

- name: create gogs project {{ project_name }}
  shell: "{{ openshift_cli }} new-project {{ project_name }} --display-name='{{ project_display_name }}' --description='{{ project_desc }}'"
  when: nexus_project_result|failed

- name: assign user as project admin
  shell: "{{ openshift_cli }} adm policy add-role-to-user admin {{ project_admin }} -n {{ project_name }}"
  ignore_errors: true
  when:
    - nexus_project_result|failed
    - project_admin is defined
    - project_admin is not none
    - project_admin|trim() != ""

- name: annotate project project {{ project_name }}
  shell: "{{ openshift_cli }} annotate --overwrite namespace {{ project_name }} {{ project_annotations }}"
  ignore_errors: true
  when:
    - nexus_project_result|failed
    - project_annotations is defined
    - project_annotations is not none
    - project_annotations|trim() != ""

# deploy nexus    
- name: check if nexus exists
  shell: "{{ openshift_cli }} get service {{ nexus_service_name }} -n {{ project_name }}"
  register: nexus_result
  ignore_errors: true
  changed_when: false

- name: deploy nexus template (persistent)
  shell: |
    {{ openshift_cli }} new-app -f https://raw.githubusercontent.com/OpenShiftDemos/nexus/master/nexus{{ nexus_image_version[:1] }}-persistent-template.yaml \
        --param=VOLUME_CAPACITY={{ nexus_volume_capacity }} \
        --param=SERVICE_NAME={{ nexus_service_name }} \
        --param=MAX_MEMORY={{ nexus_max_memory }} \
        --param=NEXUS_VERSION={{ nexus_image_version }} \
        -n {{ project_name }}
  when: nexus_result|failed and not ephemeral

- name: deploy nexus template (ephemeral)
  shell: |
    {{ openshift_cli }} new-app -f https://raw.githubusercontent.com/OpenShiftDemos/nexus/master/nexus{{ nexus_image_version[:1] }}-template.yaml \
        --param=MAX_MEMORY={{ nexus_max_memory }} \
        --param=SERVICE_NAME={{ nexus_service_name }} \
        --param=NEXUS_VERSION={{ nexus_image_version }} \
        -n {{ project_name }}
  when: nexus_result|failed and ephemeral

- name: set nexus resources
  shell: "{{ openshift_cli }} set resources dc/{{ nexus_service_name }} --limits=cpu={{ nexus_max_cpu }},memory={{ nexus_max_memory }} --requests=cpu={{ nexus_min_cpu }},memory={{ nexus_min_memory }} -n {{ project_name }}"

- name: get nexus route
  shell: "{{ openshift_cli }} get route {{ nexus_service_name }} -o json -n {{ project_name }}"
  register: nexus_result
  changed_when: false

- name: wait for nexus to be running
  uri:
    url: http://{{ nexus_result.stdout|from_json|json_query('spec.host') }}
    status_code: 200
  register: result
  until: result.status == 200
  retries: 30
  delay: 30